{
  "admin": {
    "disabled": true
  },
  "logging": {
    "logs": {
      "default": {
        "writer": {
          "output": "file",
          "filename": "/var/log/caddy/access.log",
          "roll": true,
          "roll_size_mb": 2,
          "roll_keep": 2,
          "roll_keep_days": 14
        },
        "level": "ERROR"
      }
    }
  },
  "storage": {
    "module": "file_system",
    "root": "/home/tls" //存放证书及密钥的基本路径
  },
  "apps": {
    "http": {
      "servers": {
        "https": {
          "listen": [
            ":443"
          ], //https默认监听端口
          "listener_wrappers": [
            {
              "wrapper": "trojan" //caddy-trojan插件应用必须配置
            }
          ],
          "routes": [
            {
              "handle": [
                {
                  "handler": "forward_proxy",
                  "auth_user_deprecated": "user", //naiveproxy用户，修改为自己的。
                  "auth_pass_deprecated": "pass", //naiveproxy密码，修改为自己的。
                  "hide_ip": true,
                  "hide_via": true,
                  "probe_resistance": {}
                },
                {
                  "handler": "trojan",
                  "users": [
                    "diy443"
                  ], //修改为自己的密码。密码可多组（"password"），用逗号隔开。
                  "connect_method": true,
                  "websocket": false //开启WebSocket支持
                }
              ]
            },
            {
              "match": [
                {
                  "host": [
                    "xx.yy"
                  ] //限定域名访问（禁止以IP方式访问网站），修改为自己的域名。
                }
              ],
              "handle": [
                {
                  "handler": "subroute",
                  "routes": [
                    {
                      "handle": [
                        {
                          "handler": "headers",
                          "response": {
                            "set": {
                              "Strict-Transport-Security": [
                                "max-age=31536000; includeSubDomains; preload"
                              ] //启用HSTS
                            }
                          }
                        }
                      ]
                    },
                    {
                      "handle": [
                        {
                          "handler": "file_server",
                          "root": "/var/www/html" //修改为自己存放的WEB文件路径
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "tls_connection_policies": [
            {
              "cipher_suites": [
                "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"
              ],
              "curves": [
                "x25519",
                "secp256r1",
                "secp384r1",
                "secp521r1"
              ],
              "alpn": [
                "h2",
                "http/1.1"
              ]
            }
          ],
          "allow_h2c": true, //caddy-trojan插件应用必须启用
          "experimental_http3": true //开启http3 server支持
        }
      }
    },
    "tls": {
      "certificates": {
        "automate": [
          "xx.yy"
        ] //自动化管理域名证书（包括获取、更新证书及加载证书）。修改为自己的域名。
      },
      "automation": {
        "policies": [
          {
            "issuers": [
              {
                "module": "zerossl", //acme表示从Let's Encrypt申请证书及密钥，zerossl表示从ZeroSSL申请证书及密钥。acme与zerossl二选一。
                "account_key": "", //If you have an existing account with the ACME server, put the private key here in PEM format. The ACME client will look up your account information with this key first before trying to create a new one. You can use placeholders here, for example if you have it in an environment variable.
                "email": "example@mail.com",
                "challenges": {
                  "dns": {
                    "provider": {
                      "name": "cloudflare",
                      "api_token": "e09062f1fd2545555fc8a15fceda2222" //换成你cloudflare的api，此api是你配置相关生成的，详细参考官方及cloudflare插件github。 API token is used for authentication. Make sure to use a scoped API token, NOT a global API key. It will need two permissions: Zone-Zone-Read and Zone-DNS-Edit, unless you are only using GetRecords(), in which case the second can be changed to Read.
                    }
                  }
                }
              }
            ]
          }
        ],
        "renew_interval": "60d",
        "storage_clean_interval": "30d"
      }
    }
  }
}